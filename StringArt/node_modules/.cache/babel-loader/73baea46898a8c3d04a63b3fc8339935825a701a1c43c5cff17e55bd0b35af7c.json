{"ast":null,"code":"var _jsxFileName = \"/media/hailey/More/AI/artifacts/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StringArtGenerator = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const imageCanvasRef = useRef(null);\n  const [numPegs, setNumPegs] = useState(200);\n  const [numLines, setNumLines] = useState(1000);\n  const [canvasSize, setCanvasSize] = useState(600);\n  const [uploadedImage, setUploadedImage] = useState(null);\n  const [isApproximating, setIsApproximating] = useState(false);\n  const [approximationProgress, setApproximationProgress] = useState(0);\n  const [isPaused, setIsPaused] = useState(false);\n  const [approximationSpeed, setApproximationSpeed] = useState(0); // 0 means no delay\n  const [debugLog, setDebugLog] = useState([]);\n  const addDebugLog = message => {\n    setDebugLog(prevLog => [...prevLog, message]);\n  };\n  class StringArt {\n    constructor(numPegs, canvasSize) {\n      this.numPegs = numPegs;\n      this.canvasSize = canvasSize;\n      this.radius = canvasSize / 2;\n      this.pegPositions = [];\n      this.generatePegPositions();\n    }\n    generatePegPositions() {\n      for (let i = 0; i < this.numPegs; i++) {\n        const angle = i / this.numPegs * 2 * Math.PI;\n        const x = this.radius + this.radius * Math.cos(angle);\n        const y = this.radius + this.radius * Math.sin(angle);\n        this.pegPositions.push({\n          x,\n          y\n        });\n      }\n    }\n    drawLine(ctx, startPeg, endPeg) {\n      const startPos = this.pegPositions[startPeg];\n      const endPos = this.pegPositions[endPeg];\n      const dx = endPos.x - startPos.x;\n      const dy = endPos.y - startPos.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      const numStrands = 5;\n      const strandWidth = 0.5;\n      const perpX = -dy / distance;\n      const perpY = dx / distance;\n      for (let i = 0; i < numStrands; i++) {\n        const offset = (i - (numStrands - 1) / 2) * strandWidth;\n        const x1 = startPos.x + offset * perpX;\n        const y1 = startPos.y + offset * perpY;\n        const x2 = endPos.x + offset * perpX;\n        const y2 = endPos.y + offset * perpY;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        const centerDistance = Math.abs(i - (numStrands - 1) / 2);\n        const opacity = 1 - centerDistance / (numStrands - 1) * 0.8;\n        ctx.strokeStyle = `rgba(255, 255, 255, ${opacity})`;\n        ctx.lineWidth = strandWidth;\n        ctx.stroke();\n      }\n    }\n    generateRandomArt(ctx, numLines) {\n      ctx.fillStyle = 'black';\n      ctx.fillRect(0, 0, this.canvasSize, this.canvasSize);\n      for (let i = 0; i < numLines; i++) {\n        const startPeg = Math.floor(Math.random() * this.numPegs);\n        const endPeg = Math.floor(Math.random() * this.numPegs);\n        this.drawLine(ctx, startPeg, endPeg);\n      }\n    }\n  }\n  const approximateImage = useCallback(async (stringArt, ctx, targetImageData, numLines) => {\n    ctx.fillStyle = 'black';\n    ctx.fillRect(0, 0, canvasSize, canvasSize);\n    let currentPeg = 0;\n    const tempCanvas = document.createElement('canvas');\n    tempCanvas.width = canvasSize;\n    tempCanvas.height = canvasSize;\n    const tempCtx = tempCanvas.getContext('2d');\n    for (let i = 0; i < numLines; i++) {\n      if (isPaused) {\n        await new Promise(resolve => {\n          const checkPause = () => {\n            if (isPaused) {\n              setTimeout(checkPause, 100);\n            } else {\n              resolve();\n            }\n          };\n          checkPause();\n        });\n      }\n      let bestError = Infinity;\n      let bestPeg = -1;\n      for (let nextPeg = 0; nextPeg < stringArt.numPegs; nextPeg++) {\n        if (nextPeg === currentPeg) continue;\n        tempCtx.drawImage(ctx.canvas, 0, 0);\n        stringArt.drawLine(tempCtx, currentPeg, nextPeg);\n        const error = calculateError(tempCtx, targetImageData);\n        if (error < bestError) {\n          bestError = error;\n          bestPeg = nextPeg;\n        }\n      }\n      stringArt.drawLine(ctx, currentPeg, bestPeg);\n      currentPeg = bestPeg;\n      setApproximationProgress((i + 1) / numLines * 100);\n      addDebugLog(`Line ${i + 1}/${numLines} drawn. Best peg: ${bestPeg}`);\n      if (approximationSpeed > 0) {\n        await new Promise(resolve => setTimeout(resolve, approximationSpeed));\n      }\n    }\n  }, [canvasSize, isPaused, approximationSpeed]);\n  const calculateError = (ctx, targetImageData) => {\n    const currentImageData = ctx.getImageData(0, 0, canvasSize, canvasSize).data;\n    let error = 0;\n    for (let i = 0; i < currentImageData.length; i += 4) {\n      const currentPixel = (currentImageData[i] + currentImageData[i + 1] + currentImageData[i + 2]) / 3;\n      const targetPixel = (targetImageData[i] + targetImageData[i + 1] + targetImageData[i + 2]) / 3;\n      error += Math.abs(currentPixel - targetPixel);\n    }\n    return error;\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const stringArt = new StringArt(numPegs, canvasSize);\n    if (!isApproximating || !uploadedImage) {\n      stringArt.generateRandomArt(ctx, numLines);\n    }\n  }, [numPegs, numLines, canvasSize, isApproximating, uploadedImage]);\n  useEffect(() => {\n    if (uploadedImage) {\n      const canvas = imageCanvasRef.current;\n      const ctx = canvas.getContext('2d');\n      const img = new Image();\n      img.onload = () => {\n        const size = Math.min(img.width, img.height);\n        const sourceX = (img.width - size) / 2;\n        const sourceY = (img.height - size) / 2;\n        ctx.drawImage(img, sourceX, sourceY, size, size, 0, 0, canvasSize, canvasSize);\n        const imageData = ctx.getImageData(0, 0, canvasSize, canvasSize);\n        const data = imageData.data;\n        for (let i = 0; i < data.length; i += 4) {\n          const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\n          data[i] = data[i + 1] = data[i + 2] = avg;\n        }\n        ctx.putImageData(imageData, 0, 0);\n      };\n      img.src = URL.createObjectURL(uploadedImage);\n    }\n  }, [uploadedImage, canvasSize]);\n  const handleImageUpload = event => {\n    if (event.target.files && event.target.files[0]) {\n      setUploadedImage(event.target.files[0]);\n    }\n  };\n  const handleApproximateImage = async () => {\n    if (!uploadedImage) {\n      addDebugLog(\"No image uploaded. Please upload an image first.\");\n      return;\n    }\n    setIsApproximating(true);\n    setApproximationProgress(0);\n    setDebugLog([]);\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const imageCanvas = imageCanvasRef.current;\n    const imageCtx = imageCanvas.getContext('2d');\n    const targetImageData = imageCtx.getImageData(0, 0, canvasSize, canvasSize).data;\n    const stringArt = new StringArt(numPegs, canvasSize);\n    addDebugLog(\"Starting image approximation...\");\n    await approximateImage(stringArt, ctx, targetImageData, numLines);\n    addDebugLog(\"Image approximation completed.\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex space-x-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: canvasSize,\n        height: canvasSize,\n        className: \"border border-gray-300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: imageCanvasRef,\n        width: canvasSize,\n        height: canvasSize,\n        className: \"border border-gray-300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"numPegs\",\n          className: \"mr-2\",\n          children: \"Number of Pegs:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"numPegs\",\n          value: numPegs,\n          onChange: e => setNumPegs(parseInt(e.target.value)),\n          className: \"border border-gray-300 px-2 py-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"numLines\",\n          className: \"mr-2\",\n          children: \"Number of Lines:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"numLines\",\n          value: numLines,\n          onChange: e => setNumLines(parseInt(e.target.value)),\n          className: \"border border-gray-300 px-2 py-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"canvasSize\",\n          className: \"mr-2\",\n          children: \"Canvas Size:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"canvasSize\",\n          value: canvasSize,\n          onChange: e => setCanvasSize(parseInt(e.target.value)),\n          className: \"border border-gray-300 px-2 py-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"approximationSpeed\",\n          className: \"mr-2\",\n          children: \"Approximation Speed (ms):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"approximationSpeed\",\n          value: approximationSpeed,\n          onChange: e => setApproximationSpeed(parseInt(e.target.value)),\n          className: \"border border-gray-300 px-2 py-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"imageUpload\",\n          className: \"mr-2\",\n          children: \"Upload Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"imageUpload\",\n          accept: \"image/*\",\n          onChange: handleImageUpload,\n          className: \"border border-gray-300 px-2 py-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleApproximateImage,\n          className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mr-2\",\n          children: \"Approximate Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsPaused(!isPaused),\n          className: \"bg-yellow-500 hover:bg-yellow-700 text-white font-bold py-2 px-4 rounded\",\n          children: isPaused ? \"Resume\" : \"Pause\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n          value: approximationProgress,\n          max: \"100\",\n          className: \"w-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [approximationProgress.toFixed(2), \"% complete\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-40 overflow-y-auto border border-gray-300 p-2\",\n        children: debugLog.map((log, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: log\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n};\n_s(StringArtGenerator, \"cU8gm5nhd1AnQQOO9XLm83oaE4s=\");\n_c = StringArtGenerator;\nexport default StringArtGenerator;\nvar _c;\n$RefreshReg$(_c, \"StringArtGenerator\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","jsxDEV","_jsxDEV","StringArtGenerator","_s","canvasRef","imageCanvasRef","numPegs","setNumPegs","numLines","setNumLines","canvasSize","setCanvasSize","uploadedImage","setUploadedImage","isApproximating","setIsApproximating","approximationProgress","setApproximationProgress","isPaused","setIsPaused","approximationSpeed","setApproximationSpeed","debugLog","setDebugLog","addDebugLog","message","prevLog","StringArt","constructor","radius","pegPositions","generatePegPositions","i","angle","Math","PI","x","cos","y","sin","push","drawLine","ctx","startPeg","endPeg","startPos","endPos","dx","dy","distance","sqrt","numStrands","strandWidth","perpX","perpY","offset","x1","y1","x2","y2","beginPath","moveTo","lineTo","centerDistance","abs","opacity","strokeStyle","lineWidth","stroke","generateRandomArt","fillStyle","fillRect","floor","random","approximateImage","stringArt","targetImageData","currentPeg","tempCanvas","document","createElement","width","height","tempCtx","getContext","Promise","resolve","checkPause","setTimeout","bestError","Infinity","bestPeg","nextPeg","drawImage","canvas","error","calculateError","currentImageData","getImageData","data","length","currentPixel","targetPixel","current","img","Image","onload","size","min","sourceX","sourceY","imageData","avg","putImageData","src","URL","createObjectURL","handleImageUpload","event","target","files","handleApproximateImage","imageCanvas","imageCtx","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","parseInt","accept","onClick","max","toFixed","map","log","index","_c","$RefreshReg$"],"sources":["/media/hailey/More/AI/artifacts/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react';\n\nconst StringArtGenerator = () => {\n  const canvasRef = useRef(null);\n  const imageCanvasRef = useRef(null);\n  const [numPegs, setNumPegs] = useState(200);\n  const [numLines, setNumLines] = useState(1000);\n  const [canvasSize, setCanvasSize] = useState(600);\n  const [uploadedImage, setUploadedImage] = useState(null);\n  const [isApproximating, setIsApproximating] = useState(false);\n  const [approximationProgress, setApproximationProgress] = useState(0);\n  const [isPaused, setIsPaused] = useState(false);\n  const [approximationSpeed, setApproximationSpeed] = useState(0); // 0 means no delay\n  const [debugLog, setDebugLog] = useState([]);\n\n  const addDebugLog = (message) => {\n    setDebugLog(prevLog => [...prevLog, message]);\n  };\n\n  class StringArt {\n    constructor(numPegs, canvasSize) {\n      this.numPegs = numPegs;\n      this.canvasSize = canvasSize;\n      this.radius = canvasSize / 2;\n      this.pegPositions = [];\n      this.generatePegPositions();\n    }\n\n    generatePegPositions() {\n      for (let i = 0; i < this.numPegs; i++) {\n        const angle = (i / this.numPegs) * 2 * Math.PI;\n        const x = this.radius + this.radius * Math.cos(angle);\n        const y = this.radius + this.radius * Math.sin(angle);\n        this.pegPositions.push({ x, y });\n      }\n    }\n\n    drawLine(ctx, startPeg, endPeg) {\n      const startPos = this.pegPositions[startPeg];\n      const endPos = this.pegPositions[endPeg];\n\n      const dx = endPos.x - startPos.x;\n      const dy = endPos.y - startPos.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n\n      const numStrands = 5;\n      const strandWidth = 0.5;\n\n      const perpX = -dy / distance;\n      const perpY = dx / distance;\n\n      for (let i = 0; i < numStrands; i++) {\n        const offset = (i - (numStrands - 1) / 2) * strandWidth;\n        const x1 = startPos.x + offset * perpX;\n        const y1 = startPos.y + offset * perpY;\n        const x2 = endPos.x + offset * perpX;\n        const y2 = endPos.y + offset * perpY;\n\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n\n        const centerDistance = Math.abs(i - (numStrands - 1) / 2);\n        const opacity = 1 - (centerDistance / (numStrands - 1)) * 0.8;\n\n        ctx.strokeStyle = `rgba(255, 255, 255, ${opacity})`;\n        ctx.lineWidth = strandWidth;\n        ctx.stroke();\n      }\n    }\n\n    generateRandomArt(ctx, numLines) {\n      ctx.fillStyle = 'black';\n      ctx.fillRect(0, 0, this.canvasSize, this.canvasSize);\n\n      for (let i = 0; i < numLines; i++) {\n        const startPeg = Math.floor(Math.random() * this.numPegs);\n        const endPeg = Math.floor(Math.random() * this.numPegs);\n        this.drawLine(ctx, startPeg, endPeg);\n      }\n    }\n  }\n\n  const approximateImage = useCallback(async (stringArt, ctx, targetImageData, numLines) => {\n    ctx.fillStyle = 'black';\n    ctx.fillRect(0, 0, canvasSize, canvasSize);\n\n    let currentPeg = 0;\n    const tempCanvas = document.createElement('canvas');\n    tempCanvas.width = canvasSize;\n    tempCanvas.height = canvasSize;\n    const tempCtx = tempCanvas.getContext('2d');\n\n    for (let i = 0; i < numLines; i++) {\n      if (isPaused) {\n        await new Promise(resolve => {\n          const checkPause = () => {\n            if (isPaused) {\n              setTimeout(checkPause, 100);\n            } else {\n              resolve();\n            }\n          };\n          checkPause();\n        });\n      }\n\n      let bestError = Infinity;\n      let bestPeg = -1;\n\n      for (let nextPeg = 0; nextPeg < stringArt.numPegs; nextPeg++) {\n        if (nextPeg === currentPeg) continue;\n\n        tempCtx.drawImage(ctx.canvas, 0, 0);\n        stringArt.drawLine(tempCtx, currentPeg, nextPeg);\n\n        const error = calculateError(tempCtx, targetImageData);\n        if (error < bestError) {\n          bestError = error;\n          bestPeg = nextPeg;\n        }\n      }\n\n      stringArt.drawLine(ctx, currentPeg, bestPeg);\n      currentPeg = bestPeg;\n\n      setApproximationProgress((i + 1) / numLines * 100);\n      addDebugLog(`Line ${i + 1}/${numLines} drawn. Best peg: ${bestPeg}`);\n\n      if (approximationSpeed > 0) {\n        await new Promise(resolve => setTimeout(resolve, approximationSpeed));\n      }\n    }\n  }, [canvasSize, isPaused, approximationSpeed]);\n\n  const calculateError = (ctx, targetImageData) => {\n    const currentImageData = ctx.getImageData(0, 0, canvasSize, canvasSize).data;\n    let error = 0;\n\n    for (let i = 0; i < currentImageData.length; i += 4) {\n      const currentPixel = (currentImageData[i] + currentImageData[i + 1] + currentImageData[i + 2]) / 3;\n      const targetPixel = (targetImageData[i] + targetImageData[i + 1] + targetImageData[i + 2]) / 3;\n      error += Math.abs(currentPixel - targetPixel);\n    }\n\n    return error;\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const stringArt = new StringArt(numPegs, canvasSize);\n\n    if (!isApproximating || !uploadedImage) {\n      stringArt.generateRandomArt(ctx, numLines);\n    }\n  }, [numPegs, numLines, canvasSize, isApproximating, uploadedImage]);\n\n  useEffect(() => {\n    if (uploadedImage) {\n      const canvas = imageCanvasRef.current;\n      const ctx = canvas.getContext('2d');\n\n      const img = new Image();\n      img.onload = () => {\n        const size = Math.min(img.width, img.height);\n        const sourceX = (img.width - size) / 2;\n        const sourceY = (img.height - size) / 2;\n\n        ctx.drawImage(img, sourceX, sourceY, size, size, 0, 0, canvasSize, canvasSize);\n\n        const imageData = ctx.getImageData(0, 0, canvasSize, canvasSize);\n        const data = imageData.data;\n        for (let i = 0; i < data.length; i += 4) {\n          const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\n          data[i] = data[i + 1] = data[i + 2] = avg;\n        }\n        ctx.putImageData(imageData, 0, 0);\n      };\n      img.src = URL.createObjectURL(uploadedImage);\n    }\n  }, [uploadedImage, canvasSize]);\n\n  const handleImageUpload = (event) => {\n    if (event.target.files && event.target.files[0]) {\n      setUploadedImage(event.target.files[0]);\n    }\n  };\n\n  const handleApproximateImage = async () => {\n    if (!uploadedImage) {\n      addDebugLog(\"No image uploaded. Please upload an image first.\");\n      return;\n    }\n\n    setIsApproximating(true);\n    setApproximationProgress(0);\n    setDebugLog([]);\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const imageCanvas = imageCanvasRef.current;\n    const imageCtx = imageCanvas.getContext('2d');\n    const targetImageData = imageCtx.getImageData(0, 0, canvasSize, canvasSize).data;\n    const stringArt = new StringArt(numPegs, canvasSize);\n\n    addDebugLog(\"Starting image approximation...\");\n    await approximateImage(stringArt, ctx, targetImageData, numLines);\n    addDebugLog(\"Image approximation completed.\");\n  };\n\n  return (\n    <div className=\"flex flex-col items-center space-y-4\">\n      <div className=\"flex space-x-4\">\n        <canvas\n          ref={canvasRef}\n          width={canvasSize}\n          height={canvasSize}\n          className=\"border border-gray-300\"\n        />\n        <canvas\n          ref={imageCanvasRef}\n          width={canvasSize}\n          height={canvasSize}\n          className=\"border border-gray-300\"\n        />\n      </div>\n      <div className=\"space-y-2\">\n        <div>\n          <label htmlFor=\"numPegs\" className=\"mr-2\">Number of Pegs:</label>\n          <input\n            type=\"number\"\n            id=\"numPegs\"\n            value={numPegs}\n            onChange={(e) => setNumPegs(parseInt(e.target.value))}\n            className=\"border border-gray-300 px-2 py-1\"\n          />\n        </div>\n        <div>\n          <label htmlFor=\"numLines\" className=\"mr-2\">Number of Lines:</label>\n          <input\n            type=\"number\"\n            id=\"numLines\"\n            value={numLines}\n            onChange={(e) => setNumLines(parseInt(e.target.value))}\n            className=\"border border-gray-300 px-2 py-1\"\n          />\n        </div>\n        <div>\n          <label htmlFor=\"canvasSize\" className=\"mr-2\">Canvas Size:</label>\n          <input\n            type=\"number\"\n            id=\"canvasSize\"\n            value={canvasSize}\n            onChange={(e) => setCanvasSize(parseInt(e.target.value))}\n            className=\"border border-gray-300 px-2 py-1\"\n          />\n        </div>\n        <div>\n          <label htmlFor=\"approximationSpeed\" className=\"mr-2\">Approximation Speed (ms):</label>\n          <input\n            type=\"number\"\n            id=\"approximationSpeed\"\n            value={approximationSpeed}\n            onChange={(e) => setApproximationSpeed(parseInt(e.target.value))}\n            className=\"border border-gray-300 px-2 py-1\"\n          />\n        </div>\n        <div>\n          <label htmlFor=\"imageUpload\" className=\"mr-2\">Upload Image:</label>\n          <input\n            type=\"file\"\n            id=\"imageUpload\"\n            accept=\"image/*\"\n            onChange={handleImageUpload}\n            className=\"border border-gray-300 px-2 py-1\"\n          />\n        </div>\n        <div>\n          <button\n            onClick={handleApproximateImage}\n            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mr-2\"\n          >\n            Approximate Image\n          </button>\n          <button\n            onClick={() => setIsPaused(!isPaused)}\n            className=\"bg-yellow-500 hover:bg-yellow-700 text-white font-bold py-2 px-4 rounded\"\n          >\n            {isPaused ? \"Resume\" : \"Pause\"}\n          </button>\n        </div>\n        <div>\n          <progress value={approximationProgress} max=\"100\" className=\"w-full\" />\n          <p>{approximationProgress.toFixed(2)}% complete</p>\n        </div>\n        <div className=\"h-40 overflow-y-auto border border-gray-300 p-2\">\n          {debugLog.map((log, index) => (\n            <p key={index}>{log}</p>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StringArtGenerator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}