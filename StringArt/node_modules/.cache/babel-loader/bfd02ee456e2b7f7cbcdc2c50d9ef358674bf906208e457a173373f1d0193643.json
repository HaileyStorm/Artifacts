{"ast":null,"code":"var _jsxFileName = \"/media/hailey/More/AI/artifacts/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StringArtGenerator = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const imageCanvasRef = useRef(null);\n  const [numPegs, setNumPegs] = useState(200);\n  const [numLines, setNumLines] = useState(1000);\n  const [canvasSize, setCanvasSize] = useState(600);\n  const [uploadedImage, setUploadedImage] = useState(null);\n  class StringArt {\n    constructor(numPegs, canvasSize) {\n      this.numPegs = numPegs;\n      this.canvasSize = canvasSize;\n      this.radius = canvasSize / 2;\n      this.pegPositions = [];\n      this.generatePegPositions();\n    }\n    generatePegPositions() {\n      for (let i = 0; i < this.numPegs; i++) {\n        const angle = i / this.numPegs * 2 * Math.PI;\n        const x = this.radius + this.radius * Math.cos(angle);\n        const y = this.radius + this.radius * Math.sin(angle);\n        this.pegPositions.push({\n          x,\n          y\n        });\n      }\n    }\n    drawLine(ctx, startPeg, endPeg) {\n      const startPos = this.pegPositions[startPeg];\n      const endPos = this.pegPositions[endPeg];\n      const numSubLines = 7; // Number of sub-lines to create the 3D effect\n      const subLineSpacing = 1; // Space between sub-lines\n\n      for (let i = 0; i < numSubLines; i++) {\n        const offset = (i - (numSubLines - 1) / 2) * subLineSpacing;\n        const opacity = 1 - Math.abs(offset) / ((numSubLines - 1) / 2);\n        ctx.beginPath();\n        ctx.moveTo(startPos.x + offset, startPos.y + offset);\n        ctx.lineTo(endPos.x + offset, endPos.y + offset);\n        ctx.strokeStyle = `rgba(255, 255, 255, ${opacity})`;\n        ctx.lineWidth = 1;\n        ctx.stroke();\n      }\n    }\n    generateRandomArt(ctx, numLines) {\n      for (let i = 0; i < numLines; i++) {\n        const startPeg = Math.floor(Math.random() * this.numPegs);\n        const endPeg = Math.floor(Math.random() * this.numPegs);\n        this.drawLine(ctx, startPeg, endPeg);\n      }\n    }\n    generateImageApproximation(ctx, targetImageData, numLines) {\n      let currentPeg = 0;\n      for (let i = 0; i < numLines; i++) {\n        let bestEndPeg = null;\n        let minError = Infinity;\n        for (let j = 0; j < this.numPegs; j++) {\n          if (j === currentPeg) continue;\n          this.drawLine(ctx, currentPeg, j);\n          const currentImageData = ctx.getImageData(0, 0, this.canvasSize, this.canvasSize);\n          const error = this.calculateError(currentImageData, targetImageData);\n          if (error < minError) {\n            minError = error;\n            bestEndPeg = j;\n          }\n          ctx.clearRect(0, 0, this.canvasSize, this.canvasSize);\n        }\n        this.drawLine(ctx, currentPeg, bestEndPeg);\n        currentPeg = bestEndPeg;\n      }\n    }\n    calculateError(imageData1, imageData2) {\n      const data1 = imageData1.data;\n      const data2 = imageData2.data;\n      let error = 0;\n      for (let i = 0; i < data1.length; i += 4) {\n        const r1 = data1[i];\n        const g1 = data1[i + 1];\n        const b1 = data1[i + 2];\n        const r2 = data2[i];\n        const g2 = data2[i + 1];\n        const b2 = data2[i + 2];\n        const pixelError = (r1 - r2) ** 2 + (g1 - g2) ** 2 + (b1 - b2) ** 2;\n        error += pixelError;\n      }\n      return error;\n    }\n  }\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Clear canvas\n    ctx.fillStyle = 'black';\n    ctx.fillRect(0, 0, canvasSize, canvasSize);\n    const stringArt = new StringArt(numPegs, canvasSize);\n    if (uploadedImage) {\n      const targetImageData = imageCanvasRef.current.getContext('2d').getImageData(0, 0, canvasSize, canvasSize);\n      stringArt.generateImageApproximation(ctx, targetImageData, numLines);\n    } else {\n      stringArt.generateRandomArt(ctx, numLines);\n    }\n  }, [numPegs, numLines, canvasSize, uploadedImage]);\n  useEffect(() => {\n    if (uploadedImage) {\n      const canvas = imageCanvasRef.current;\n      const ctx = canvas.getContext('2d');\n      const img = new Image();\n      img.onload = () => {\n        // Calculate dimensions for center crop\n        const size = Math.min(img.width, img.height);\n        const sourceX = (img.width - size) / 2;\n        const sourceY = (img.height - size) / 2;\n\n        // Draw and scale image\n        ctx.drawImage(img, sourceX, sourceY, size, size, 0, 0, canvasSize, canvasSize);\n\n        // Convert to grayscale\n        const imageData = ctx.getImageData(0, 0, canvasSize, canvasSize);\n        const data = imageData.data;\n        for (let i = 0; i < data.length; i += 4) {\n          const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\n          data[i] = data[i + 1] = data[i + 2] = avg;\n        }\n        ctx.putImageData(imageData, 0, 0);\n      };\n      img.src = URL.createObjectURL(uploadedImage);\n    }\n  }, [uploadedImage, canvasSize]);\n  const handleImageUpload = event => {\n    if (event.target.files && event.target.files[0]) {\n      setUploadedImage(event.target.files[0]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex space-x-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: canvasSize,\n        height: canvasSize,\n        className: \"border border-gray-300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: imageCanvasRef,\n        width: canvasSize,\n        height: canvasSize,\n        className: \"border border-gray-300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"numPegs\",\n          className: \"mr-2\",\n          children: \"Number of Pegs:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"numPegs\",\n          value: numPegs,\n          onChange: e => setNumPegs(parseInt(e.target.value)),\n          className: \"border border-gray-300 px-2 py-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"numLines\",\n          className: \"mr-2\",\n          children: \"Number of Lines:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"numLines\",\n          value: numLines,\n          onChange: e => setNumLines(parseInt(e.target.value)),\n          className: \"border border-gray-300 px-2 py-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"canvasSize\",\n          className: \"mr-2\",\n          children: \"Canvas Size:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"canvasSize\",\n          value: canvasSize,\n          onChange: e => setCanvasSize(parseInt(e.target.value)),\n          className: \"border border-gray-300 px-2 py-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"imageUpload\",\n          className: \"mr-2\",\n          children: \"Upload Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"imageUpload\",\n          accept: \"image/*\",\n          onChange: handleImageUpload,\n          className: \"border border-gray-300 px-2 py-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_s(StringArtGenerator, \"H8L3QqjlvP1IiwLY0wpp1Y0sKA8=\");\n_c = StringArtGenerator;\nexport default StringArtGenerator;\nvar _c;\n$RefreshReg$(_c, \"StringArtGenerator\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","StringArtGenerator","_s","canvasRef","imageCanvasRef","numPegs","setNumPegs","numLines","setNumLines","canvasSize","setCanvasSize","uploadedImage","setUploadedImage","StringArt","constructor","radius","pegPositions","generatePegPositions","i","angle","Math","PI","x","cos","y","sin","push","drawLine","ctx","startPeg","endPeg","startPos","endPos","numSubLines","subLineSpacing","offset","opacity","abs","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","generateRandomArt","floor","random","generateImageApproximation","targetImageData","currentPeg","bestEndPeg","minError","Infinity","j","currentImageData","getImageData","error","calculateError","clearRect","imageData1","imageData2","data1","data","data2","length","r1","g1","b1","r2","g2","b2","pixelError","canvas","current","getContext","fillStyle","fillRect","stringArt","img","Image","onload","size","min","width","height","sourceX","sourceY","drawImage","imageData","avg","putImageData","src","URL","createObjectURL","handleImageUpload","event","target","files","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","parseInt","accept","_c","$RefreshReg$"],"sources":["/media/hailey/More/AI/artifacts/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nconst StringArtGenerator = () => {\n  const canvasRef = useRef(null);\n  const imageCanvasRef = useRef(null);\n  const [numPegs, setNumPegs] = useState(200);\n  const [numLines, setNumLines] = useState(1000);\n  const [canvasSize, setCanvasSize] = useState(600);\n  const [uploadedImage, setUploadedImage] = useState(null);\n\n  class StringArt {\n    constructor(numPegs, canvasSize) {\n      this.numPegs = numPegs;\n      this.canvasSize = canvasSize;\n      this.radius = canvasSize / 2;\n      this.pegPositions = [];\n      this.generatePegPositions();\n    }\n\n    generatePegPositions() {\n      for (let i = 0; i < this.numPegs; i++) {\n        const angle = (i / this.numPegs) * 2 * Math.PI;\n        const x = this.radius + this.radius * Math.cos(angle);\n        const y = this.radius + this.radius * Math.sin(angle);\n        this.pegPositions.push({ x, y });\n      }\n    }\n\n    drawLine(ctx, startPeg, endPeg) {\n      const startPos = this.pegPositions[startPeg];\n      const endPos = this.pegPositions[endPeg];\n      const numSubLines = 7; // Number of sub-lines to create the 3D effect\n      const subLineSpacing = 1; // Space between sub-lines\n\n      for (let i = 0; i < numSubLines; i++) {\n        const offset = (i - (numSubLines - 1) / 2) * subLineSpacing;\n        const opacity = 1 - Math.abs(offset) / ((numSubLines - 1) / 2);\n\n        ctx.beginPath();\n        ctx.moveTo(startPos.x + offset, startPos.y + offset);\n        ctx.lineTo(endPos.x + offset, endPos.y + offset);\n        ctx.strokeStyle = `rgba(255, 255, 255, ${opacity})`;\n        ctx.lineWidth = 1;\n        ctx.stroke();\n      }\n    }\n\n    generateRandomArt(ctx, numLines) {\n      for (let i = 0; i < numLines; i++) {\n        const startPeg = Math.floor(Math.random() * this.numPegs);\n        const endPeg = Math.floor(Math.random() * this.numPegs);\n        this.drawLine(ctx, startPeg, endPeg);\n      }\n    }\n\n    generateImageApproximation(ctx, targetImageData, numLines) {\n      let currentPeg = 0;\n\n      for (let i = 0; i < numLines; i++) {\n        let bestEndPeg = null;\n        let minError = Infinity;\n\n        for (let j = 0; j < this.numPegs; j++) {\n          if (j === currentPeg) continue;\n\n          this.drawLine(ctx, currentPeg, j);\n          const currentImageData = ctx.getImageData(0, 0, this.canvasSize, this.canvasSize);\n          const error = this.calculateError(currentImageData, targetImageData);\n\n          if (error < minError) {\n            minError = error;\n            bestEndPeg = j;\n          }\n\n          ctx.clearRect(0, 0, this.canvasSize, this.canvasSize);\n        }\n\n        this.drawLine(ctx, currentPeg, bestEndPeg);\n        currentPeg = bestEndPeg;\n      }\n    }\n\n    calculateError(imageData1, imageData2) {\n      const data1 = imageData1.data;\n      const data2 = imageData2.data;\n      let error = 0;\n\n      for (let i = 0; i < data1.length; i += 4) {\n        const r1 = data1[i];\n        const g1 = data1[i + 1];\n        const b1 = data1[i + 2];\n\n        const r2 = data2[i];\n        const g2 = data2[i + 1];\n        const b2 = data2[i + 2];\n\n        const pixelError = (r1 - r2) ** 2 + (g1 - g2) ** 2 + (b1 - b2) ** 2;\n        error += pixelError;\n      }\n\n      return error;\n    }\n  }\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Clear canvas\n    ctx.fillStyle = 'black';\n    ctx.fillRect(0, 0, canvasSize, canvasSize);\n\n    const stringArt = new StringArt(numPegs, canvasSize);\n\n    if (uploadedImage) {\n      const targetImageData = imageCanvasRef.current.getContext('2d').getImageData(0, 0, canvasSize, canvasSize);\n      stringArt.generateImageApproximation(ctx, targetImageData, numLines);\n    } else {\n      stringArt.generateRandomArt(ctx, numLines);\n    }\n  }, [numPegs, numLines, canvasSize, uploadedImage]);\n\n  useEffect(() => {\n    if (uploadedImage) {\n      const canvas = imageCanvasRef.current;\n      const ctx = canvas.getContext('2d');\n\n      const img = new Image();\n      img.onload = () => {\n        // Calculate dimensions for center crop\n        const size = Math.min(img.width, img.height);\n        const sourceX = (img.width - size) / 2;\n        const sourceY = (img.height - size) / 2;\n\n        // Draw and scale image\n        ctx.drawImage(img, sourceX, sourceY, size, size, 0, 0, canvasSize, canvasSize);\n\n        // Convert to grayscale\n        const imageData = ctx.getImageData(0, 0, canvasSize, canvasSize);\n        const data = imageData.data;\n        for (let i = 0; i < data.length; i += 4) {\n          const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\n          data[i] = data[i + 1] = data[i + 2] = avg;\n        }\n        ctx.putImageData(imageData, 0, 0);\n      };\n      img.src = URL.createObjectURL(uploadedImage);\n    }\n  }, [uploadedImage, canvasSize]);\n\n  const handleImageUpload = (event) => {\n    if (event.target.files && event.target.files[0]) {\n      setUploadedImage(event.target.files[0]);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col items-center space-y-4\">\n      <div className=\"flex space-x-4\">\n        <canvas\n          ref={canvasRef}\n          width={canvasSize}\n          height={canvasSize}\n          className=\"border border-gray-300\"\n        />\n        <canvas\n          ref={imageCanvasRef}\n          width={canvasSize}\n          height={canvasSize}\n          className=\"border border-gray-300\"\n        />\n      </div>\n      <div className=\"space-y-2\">\n        <div>\n          <label htmlFor=\"numPegs\" className=\"mr-2\">Number of Pegs:</label>\n          <input\n            type=\"number\"\n            id=\"numPegs\"\n            value={numPegs}\n            onChange={(e) => setNumPegs(parseInt(e.target.value))}\n            className=\"border border-gray-300 px-2 py-1\"\n          />\n        </div>\n        <div>\n          <label htmlFor=\"numLines\" className=\"mr-2\">Number of Lines:</label>\n          <input\n            type=\"number\"\n            id=\"numLines\"\n            value={numLines}\n            onChange={(e) => setNumLines(parseInt(e.target.value))}\n            className=\"border border-gray-300 px-2 py-1\"\n          />\n        </div>\n        <div>\n          <label htmlFor=\"canvasSize\" className=\"mr-2\">Canvas Size:</label>\n          <input\n            type=\"number\"\n            id=\"canvasSize\"\n            value={canvasSize}\n            onChange={(e) => setCanvasSize(parseInt(e.target.value))}\n            className=\"border border-gray-300 px-2 py-1\"\n          />\n        </div>\n        <div>\n          <label htmlFor=\"imageUpload\" className=\"mr-2\">Upload Image:</label>\n          <input\n            type=\"file\"\n            id=\"imageUpload\"\n            accept=\"image/*\"\n            onChange={handleImageUpload}\n            className=\"border border-gray-300 px-2 py-1\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StringArtGenerator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}